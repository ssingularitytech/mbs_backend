{"version":3,"sources":["globals/flexbox/FlexBox.react.jsx","app/simulation/components/seeds.js","globals/semantic/QuoButton.react.jsx","globals/carousel/HTMLSlider.react.jsx","app/simulation/components/InfoPane.react.jsx","app/simulation/components/InterestIcon.react.jsx","app/simulation/components/TopBar.react.jsx","app/simulation/WelcomeContainer.react.jsx","globals/error/ErrorPage.react.jsx","app/simulation/pages/Simulation.react.jsx","app/simulation/SimulationContainer.react.jsx","app/simulation/components/logic.js","app/simulation/pages/Result.react.jsx","app/simulation/ResultContainer.react.jsx","app/simulation/pages/Surveyor.react.jsx","app/simulation/SurveyContainer.react.jsx"],"names":["FlexBox","defaultValues","display","height","this","props","width","alignItems","vertical","justifyContent","horzontal","backgroundColor","background","flexDirection","direction","position","templateWrap","style","top","left","right","bottom","overflow","overflowY","children","React","Component","defaultProps","welcomeText","title","content","buttonText","link","resultText","cutScenes","1","headline","interviews","presenter","questions","questionId","question","options","0","option","value","analytical","creative","methodical","frugal","competencies","problem_solving","decision_making","balanced_approach","time_management","resourcefulness","attributes","2","3","simulations","analytics","endpoints","name","4","5","score","cell","QuoButton","setHover","setState","hovered","removeHover","state","buttonStyle","auth","user","undefined","client","appConfiguration","passedProps","dispatch","onMouseEnter","disabled","onMouseLeave","connect","HTMLSlider","handleCallback","index","callback","handleClick","changeImg","next","slider","slickNext","previous","slickPrev","initialSlide","settings","dots","speed","slidesToShow","slidesToScroll","centerMode","arrows","autoplay","autoPlay","asNavFor","className","infinite","afterChange","sliderItemStyle","activeSliderItemStyle","carouselStyle","ref","c","sliderItems","map","key","onClick","active","arrowBtns","icon","labelPosition","secondary","float","length","renderer","hours","minutes","seconds","completed","Group","corner","color","InfoPane","goNext","handleSubmit","hashHistory","push","src","phaseTime","href","size","marginTop","raised","inverted","date","Date","now","onComplete","addOvertime","dangerouslySetInnerHTML","__html","primary","fluid","PureComponent","InterestIcon","lineHeight","textAlign","Icon","interest","interestLevels","circular","marginBottom","TopBar","progressSection","cost","zIndex","image","Image","constraint","maxConstraint","Progress","percent","parseInt","indicating","_","interestNames","idx","interests","WelcomeContainer","startSim","simParams","lastLocation","presentation","times","n","padding","Row","Column","getAppConfig","apiUrls","assetLib","margin","floated","actions","ErrorPage","alt","fontSize","msg","logout","goBack","Simulation","params","id","Segment","basic","Grid","Button","SimulationContainer","fetchCompleted","error","errorMsg","barred","uam","ubm","uap","ubp","rvm","slb","slg","cac","suc","fub","uas","ubs","dsc","utl","Result","modalOpen","modalClose","coeff","Object","assign","finalValuation","monthId","Math","max","dilution","Modal","open","Content","transform","Actions","ResultContainer","console","log","endSim","opsRecords","setLastLocation","location","SimManagerAction","simulationId","Surveyor","url","interview","saveAnswers","answered","then","handleInputChange","e","currentInput","target","handleKeyDown","keyCode","preventDefault","saveAnswer","q","cloneDeep","thisAnswer","find","splice","indexOf","response","questionCards","elm","backgroundSize","Input","onFocus","onChange","onBlur","onKeyDown","idx2","paddingTop","SurveyContainer","answers","QuestionManagerAction"],"mappings":"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","file":"static/js/welcome.90e0d28a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FlexBox extends React.Component {\n    static propTypes = {\n        vertical: PropTypes.string,\n        horzontal: PropTypes.string,\n        templateWrap: PropTypes.bool\n    };\n\n    static defaultProps = {\n        templateWrap: false\n    };\n\n    render() {\n        let defaultValues = {\n            display: 'flex',\n            height: this.props.height || '100%',\n            width: 'calc(100% + 1px)',\n            alignItems: this.props.vertical || 'center',\n            justifyContent: this.props.horzontal || 'center',\n            backgroundColor: this.props.background || 'inherit',\n            flexDirection: this.props.direction || 'row',\n            position: \"relative\"\n        };\n\n        let containerStyle = {\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            overflow: \"hidden\"\n        };\n        let scrollerStyle = {\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            bottom: \"0\",\n            overflow: \"hidden\",\n            overflowY: \"scroll\"\n        };\n\n        if (this.props.templateWrap) {\n            return (\n                <div style={defaultValues}>\n                    <div style={containerStyle}>\n                        <div style={scrollerStyle}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div style={defaultValues}>\n                    {this.props.children}\n                </div>\n            );\n        }\n\n\n    }\n}\n","let welcomeText = {\n    title: \"Welcome to the Personality Profiler\",\n    content:\n        \"Welcome to the Magickbricks Know your personlaity Challenge!<br><br> You are playing as an ed-tech entprepreneur who is looking to launch an app to teach the youth of today their mother-tongue.<br><br> M-Permutator is the most sought-after incubator in the country and you are looking to get in there to maximize your chances of being funded and growing into the next killer app!<br><br> Go through your pitch deck to better understand the business idea, so that you can more forward in this simulation. Best of luck!\",\n    buttonText: \"Start the Simulation\",\n    link: \"/simulation/1\"\n};\nlet resultText = {\n    title: \"Congratulations!\",\n    content:\n        \"You are at a stage that every entrepreneur aspires to be! You have sold your company and made returns for your investors and yourself. <br><br> Let us see how you did....\",\n    buttonText: \"View Certificate\"\n};\nlet cutScenes = {\n    1: {\n        title: \"Personality profile challenge\",\n        headline: \"Know your personality \",\n        content:\n            \"The wait is over! <br/><br/>Please click on the Play button. Answer all the questions honestly.<br/> We will process your application and announce the winners shortly. <br/><br/>Best of Luck!\",\n        buttonText: \"Play\",\n        link: \"/simulation_questions/1\"\n    }\n};\n\nlet interviews = {\n    1: {\n        title: \"Application Form\",\n        background:\n            \"/assets/images/configurable/simPics/blurred_application.jpg\",\n        presenter: \"/assets/images/configurable/characters/hrlady.png\",\n        content:\n            \" The wait is over! Fill in the application form along with your business plan within the next 3 days. We will process your application and announce the winners shortly. Best of Luck!\",\n        buttonText: \"Submit Application\",\n        link: \"/result\",\n        questions: [\n            {\n                questionId: \"A4\",\n                question: \"Why do you think you would make a good entrepreneur?\",\n                options: {\n                    0:\n                    {\n                        option: \"I am persuasive\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"persuasive\"]\n                    },\n                    1:\n                    {\n                        option: \"I am unemotional\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"unemotional\"]\n                    },\n                    2:\n                    {\n                        option: \"I am self-confident\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"self-confident\"]\n                    },\n                    3:\n                    {\n                        option: \"I am energetic\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"energetic\"]\n                    }\n                }\n            },\n            {\n                questionId: \"A5\",\n                question: \"What is your greatest weakness?\",\n                options: {\n                    0:\n                    {\n                        option: \"I am too stern\",\n                        value: {\n                            analytical: 1, \n                            creative: 1, \n                            methodical: 1, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Stern\"]\n                    },\n                    1:\n                    {\n                        option: \"I am too inhibited\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Inhibited\"]\n                    },\n                    2:\n                    {\n                        option: \"I am too restless\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Restless\"]\n                    },\n                    3:\n                    {\n                        option: \"I am too stubborn\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Stubborn\"]\n                    }\n                }\n            },\n            {\n                questionId: \"A6\",\n                question: \"What is your biggest strength?\",\n                options: {\n                    0:\n                    {\n                        option: \"I am tactful\",\n                        value: {\n                            analytical: 1, \n                            creative: 1, \n                            methodical: 1, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Tactful\"]\n                    },\n                    1:\n                    {\n                        option: \"I am clear-thinking\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Clear-thinking\"]\n                    },\n                    2:\n                    {\n                        option: \"I am forward-looking\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 1, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Forward-looking\"]\n                    },\n                    3:\n                    {\n                        option: \"I am courageous\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 1, \n                            decision_making: 1, \n                            balanced_approach: 1, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Courageous\"]\n                    }\n                }\n            }\n        ]\n    }\n};\n\nlet simulations = {\n    1: {\n        title: \"Sparta Arena P&G Grid\",\n        headline: \"Sparta Arena P&G Grid\",\n        content: \"Download following excel sheet fill it in and re-upload it here\",\n        buttonText: \"Download\",\n        link: \"assets/samples/SpartaArenaPGGrid_Final_5Feb.xlsm\",\n        analytics: {\n            endpoints: {\n                1: {\n                    name: \"cprp\",\n                },\n                2: {\n                    name: \"outlay\",\n                },\n                3: {\n                    name: \"pt\",\n                },\n                4: {\n                    name: \"grp\",\n                },\n                5: {\n                    name: \"timeSlot\",\n                },\n            },\n            score: {\n                name: \"Score\",\n                cell: \"G3\"\n            }\n        }\n    }\n}\n\nexport {\n    welcomeText,\n    resultText,\n    cutScenes,\n    interviews,\n    simulations\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nexport class QuoButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hovered: false\n        };\n    }\n\n    setHover = () => {\n        this.setState({ hovered: true });\n    };\n    removeHover = () => {\n        this.setState({ hovered: false });\n    };\n\n    render() {\n        let buttonStyle;\n        buttonStyle =\n            this.props.auth.user === null ||\n            this.props.auth.user.client.appConfiguration === undefined\n                ? {\n                      ...this.props.style\n                  }\n                : {\n                      ...this.props.auth.user.client.appConfiguration\n                          .buttonStyle,\n                      ...this.props.style\n                  };\n        let { dispatch, ...passedProps } = this.props;\n        return (\n            <Button\n                {...passedProps}\n                onMouseEnter={this.props.disabled ? null : this.setHover}\n                onMouseLeave={this.props.disabled ? null : this.removeHover}\n                style={buttonStyle}\n            >\n                {this.props.children}\n            </Button>\n        );\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function*/ state => {\n    return {\n        auth: state.auth\n    };\n};\n\nexport default connect(mapStateToProps)(QuoButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Button } from \"semantic-ui-react\";\n\nclass HTMLSlider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index:\n                this.props.initialSlide === undefined\n                    ? 0\n                    : this.props.initialSlide\n        };\n    }\n\n    static propTypes = {\n        sliderItems: PropTypes.array,\n        initialSlide: PropTypes.number,\n        active: PropTypes.number,\n        autoPlay: PropTypes.bool,\n        arrows: PropTypes.bool,\n        infinite: PropTypes.bool,\n        asNavFor: PropTypes.string,\n        callback: PropTypes.func,\n        arrowBtns: PropTypes.bool\n    };\n\n    static defaultProps = {\n        sliderItems: [\"Slide 1\", \"Slide 2\", \"Slide 3\"],\n        initialSlide: 0,\n        active: 0,\n        autoPlay: true,\n        infinite: false,\n        dots: false,\n        arrows: false,\n        asNavFor: null,\n        callback: null,\n        arrowBtns: false\n    };\n\n    handleCallback = index => {\n        this.setState({ index: index }, () => {\n            if (this.props.callback) this.props.callback(index);\n        });\n    };\n\n    handleClick = index => {\n        if (this.props.changeImg) this.props.changeImg(index);\n    };\n\n    next = () => {\n        this.slider.slickNext();\n    };\n    previous = () => {\n        this.slider.slickPrev();\n    };\n\n    render() {\n        let settings = {\n            dots: this.props.dots,\n            speed: 500,\n            initialSlide: this.props.initialSlide,\n            slidesToShow: this.props.slidesToShow || 1,\n            slidesToScroll: this.props.slidesToScroll || 1,\n            centerMode: false,\n            arrows: this.props.arrows,\n            autoplay: this.props.autoPlay,\n            asNavFor: this.props.asNavFor || null,\n            className: \"imageCarousel\",\n            infinite: this.props.infinite,\n            afterChange: this.handleCallback\n        };\n        let sliderItemStyle = {\n            width: \"100%\",\n            height: \"100%\"\n        };\n        let activeSliderItemStyle = {\n            ...sliderItemStyle\n        };\n        let carouselStyle = {\n            width: \"100%\",\n            height: \"100%\"\n        };\n\n        return (\n            <div style={carouselStyle}>\n                <Slider\n                    ref={c => (this.slider = c)}\n                    {...settings}\n                    style={carouselStyle}\n                >\n                    {this.props.sliderItems.map((content, index) => {\n                        return (\n                            <div\n                                key={\"slider-\" + index}\n                                onClick={() => {\n                                    this.handleClick(index);\n                                }}\n                                style={\n                                    this.props.active === index\n                                        ? activeSliderItemStyle\n                                        : sliderItemStyle\n                                }\n                            >\n                                {content}\n                            </div>\n                        );\n                    })}\n                </Slider>\n                <br />\n                {this.props.arrowBtns && (\n                    <div>\n                        <Button\n                            content=\"Prev\"\n                            icon=\"chevron left\"\n                            labelPosition=\"left\"\n                            secondary\n                            onClick={this.previous}\n                            disabled={this.state.index === 0}\n                        />\n                        <Button\n                            content=\"Next\"\n                            icon=\"chevron right\"\n                            labelPosition=\"right\"\n                            secondary\n                            style={{ float: \"right\" }}\n                            onClick={this.next}\n                            disabled={\n                                this.state.index ===\n                                this.props.sliderItems.length - 1\n                            }\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default HTMLSlider;\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { Segment, Button, Image, Icon } from \"semantic-ui-react\";\nimport Countdown from \"react-countdown-now\";\nimport { hashHistory } from \"react-router\";\n\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n        return (\n            <Icon.Group>\n                <Icon name=\"clock\" />\n                <Icon corner name=\"exclamation\" color=\"red\" />\n            </Icon.Group>\n        );\n    } else {\n        return (\n            <span>\n                {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n            </span>\n        );\n    }\n};\n\nexport default class InfoPane extends React.PureComponent {\n    goNext = () => {\n        if (this.props.link === undefined) this.props.handleSubmit();\n        else hashHistory.push(this.props.link);\n    };\n    render() {\n        return (\n            <div>\n                <Image src={\"/assets/images/configurable/logo.png\"} />\n                {this.props.phaseTime !== undefined && (\n                    <a href=\"/#/info\">\n                        <Image\n                            src={\"/assets/images/configurable/help.png\"}\n                            size=\"tiny\"\n                            style={{ marginTop: \"-64px\" }}\n                        />\n                    </a>\n                )}\n                <Segment raised inverted>\n                    <h1 style={{ color: \"#ff695e\" }}>\n                        {this.props.title}\n                        {this.props.phaseTime !== undefined && (\n                            <span style={{ color: \"#ffc900\", float: \"right\" }}>\n                                <Countdown\n                                    date={\n                                        Date.now() +\n                                        this.props.phaseTime * 60000\n                                    }\n                                    renderer={renderer}\n                                    onComplete={this.props.addOvertime}\n                                />\n                            </span>\n                        )}\n                    </h1>\n                    <p\n                        dangerouslySetInnerHTML={{ __html: this.props.content }}\n                    />\n                    <br />\n                    <Button\n                        content={this.props.buttonText}\n                        size=\"huge\"\n                        primary\n                        fluid\n                        labelPosition=\"right\"\n                        icon=\"right chevron\"\n                        onClick={this.goNext}\n                        disabled={this.props.disabled}\n                    />\n                </Segment>\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport default class InterestIcon extends React.Component {\n    render() {\n        let interestIconStyle = {\n            width: \"64px\",\n            float: \"right\",\n            top: \"50px\",\n            color: \"#ffffff\",\n            lineHeight: \"1\",\n            position: \"relative\",\n            textAlign: \"center\"\n        };\n        return (\n            <div style={interestIconStyle}>\n                <Icon\n                    name={\n                        this.props.interest < this.props.interestLevels[0]\n                            ? \"frown outline\"\n                            : this.props.interest < this.props.interestLevels[1]\n                            ? \"meh outline\"\n                            : \"smile outline\"\n                    }\n                    size=\"big\"\n                    color={\n                        this.props.interest < this.props.interestLevels[0]\n                            ? \"red\"\n                            : this.props.interest < this.props.interestLevels[1]\n                            ? \"yellow\"\n                            : \"green\"\n                    }\n                    circular\n                    inverted\n                    style={{ marginBottom: \"5px\" }}\n                />\n                <br />\n                {this.props.name}\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Progress, Image } from \"semantic-ui-react\";\nimport InterestIcon from \"./InterestIcon.react\";\n\nexport default class TopBar extends React.Component {\n  render() {\n    let topBarWrapper = {\n      position: \"relative\",\n      zIndex: \"2\",\n      marginTop: \"-35px\"\n    };\n    let topImage = {\n      display: \"inline-block\",\n      height: \"128px\",\n      zIndex: \"9\"\n    };\n    let progressSection = {\n      position: \"relative\",\n      top: this.props.cost === undefined ? \"24px\" : \"-9px\",\n      width: \"330px\",\n      display: \"inline-block\",\n      zIndex: 3,\n      color: \"#42609c\"\n    };\n    return (\n      <div style={topBarWrapper}>\n        {this.props.image !== undefined && (\n          <Image src={this.props.image} style={topImage} />\n        )}\n        {this.props.constraint !== undefined && (\n          <div style={progressSection}>\n            <h1>\n              {this.props.constraint}\n              {this.props.cost !== undefined &&\n                this.props.maxConstraint !== undefined && (\n                  <span>\n                    : {this.props.cost}/{this.props.maxConstraint}\n                  </span>\n                )}\n            </h1>\n            {this.props.cost !== undefined && (\n              <Progress\n                percent={parseInt(\n                  (this.props.cost * 100) / this.props.maxConstraint,\n                  0\n                )}\n                inverted\n                indicating\n                color=\"red\"\n                style={{\n                  top: \"5px\"\n                }}\n              />\n            )}\n          </div>\n        )}\n        <div\n          style={{\n            position: \"relative\",\n            top: \"0px\",\n            width: \"330px\",\n            display: \"inline-block\",\n            zIndex: 3\n          }}\n        >\n          {_.map(this.props.interestNames, (interest, idx) => {\n            return (\n              <InterestIcon\n                key={`interest-icon-${idx}`}\n                interest={\n                  this.props.interests[\n                    this.props.interestNames.length - idx - 1\n                  ]\n                }\n                name={\n                  this.props.interestNames[\n                    this.props.interestNames.length - idx - 1\n                  ]\n                }\n                interestLevels={this.props.interestLevels}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Image, Grid } from \"semantic-ui-react\";\nimport { hashHistory } from \"react-router\";\n\n// Import Actions and Helpers\n// -------------------------------------\n\n// Import from Config\n// -------------------------------------\nimport { getAppConfig } from \"config/client.config\";\nimport { welcomeText } from \"./components/seeds\";\n\n// Import Components\n// -------------------------------------\nimport FlexBox from \"globals/flexbox/FlexBox.react\";\nimport HTMLSlider from \"globals/carousel/HTMLSlider.react\";\n\n/**\n * The CourseEditorContainer is the top level component connected to the redux store.\n */\nexport class WelcomeContainer extends React.Component {\n    componentDidMount() {\n        if (this.props.simParams.lastLocation !== \"#\")\n            hashHistory.push(this.props.simParams.lastLocation);\n    }\n    startSim = () => {\n        hashHistory.push(welcomeText.link);\n    };\n\n    render() {\n        let presentation = _.times(8, n => {\n            return (\n                <Image\n                    src={`/assets/images/configurable/welcome/Slide${n +\n                        1}.JPG`}\n                    fluid\n                />\n            );\n        });\n        return (\n            <FlexBox>\n                <div\n                    className=\"isRelative\"\n                    style={{\n                        height: \"640px\",\n                        padding: \"10px 50px\",\n                        width: \"100%\",\n                        background: \"rgba(0,0,0,0.5)\",\n                        color: \"#ffffff\"\n                    }}\n                >\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={16}>\n                                {/* \n                                <Image\n                                    src={\n                                        getAppConfig().apiUrls.assetLib +\n                                        \"/images/configurable/cologo.png\"\n                                    }\n                                    style={{ margin: \"0 auto\" }}\n                                    size=\"medium\"\n                                />\n                                */}\n                                <Image\n                                    src={\n                                        getAppConfig().apiUrls.assetLib +\n                                        \"/images/configurable/logo.png\"\n                                    }\n                                    style={{ margin: \"0 auto\" }}\n                                    size=\"medium\"\n                                />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={7}>\n                                <div\n                                    style={{ padding: \"0\", width: \"100%\" }}\n                                >\n                                    <HTMLSlider\n                                        sliderItems={presentation}\n                                        slidesToShow={1}\n                                        autoPlay={false}\n                                        dots={false}\n                                        arrows={false}\n                                        arrowBtns={true}\n                                    />\n                                </div>\n                            </Grid.Column>\n                            <Grid.Column width={9}>\n                                <h3\n                                    dangerouslySetInnerHTML={{\n                                        __html: welcomeText.content\n                                    }}\n                                    style={{ marginTop: \"5px\" }}\n                                />\n                                <br />\n                                <Button\n                                    size=\"huge\"\n                                    primary\n                                    content={welcomeText.buttonText}\n                                    onClick={this.startSim}\n                                    floated=\"right\"\n                                />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n            </FlexBox>\n        );\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function */ state => {\n    return {\n        auth: state.auth,\n        simParams: state.simParams\n    };\n};\n\nconst mapDispatchToProps = /* istanbul ignore next - redux function */ dispatch => {\n    return {\n        actions: {}\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(WelcomeContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport QuoButton from \"globals/semantic/QuoButton.react\";\nimport { hashHistory } from \"react-router\";\n\nexport default class ErrorPage extends React.Component {\n    static propTypes = {\n        msg: PropTypes.string,\n        logout: PropTypes.bool\n    };\n\n    static defaultProps = {\n        msg: \"Unknown Error\",\n        logout: false\n    };\n\n    render() {\n        let pageStyle = {\n            width: \"100%\",\n            height: \"calc(100vh - 84px)\",\n            textAlign: \"center\",\n            background: \"#ffffff\"\n        };\n\n        let errorImgStyle = {\n            width: \"50%\",\n            marginTop: \"100px\"\n        };\n\n        let errorMsgStyle = {\n            width: \"80%\",\n            margin: \"40px auto\",\n            fontSize: \"2.5em\",\n            color: \"#666666\",\n            lineHeight: \"1.2\"\n        };\n\n        return (\n            <div style={pageStyle}>\n                <img\n                    src=\"assets/images/defaults/error.gif\"\n                    alt=\"Error Time\"\n                    style={errorImgStyle}\n                />\n                <div style={errorMsgStyle}>\n                    Oops! Something went wrong. <br />\n                    <strong>{this.props.msg}</strong>{\" \"}\n                </div>\n                <QuoButton\n                    color=\"red\"\n                    size=\"massive\"\n                    onClick={\n                        this.props.logout\n                            ? () => hashHistory.push(\"logout\")\n                            : hashHistory.goBack\n                    }\n                >\n                    Back\n                </QuoButton>\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { Grid, Button, Image, Segment } from \"semantic-ui-react\";\nimport { hashHistory } from \"react-router\";\n\n// Import Actions and Helpers\n// -------------------------------------\nimport { getAppConfig } from \"config/client.config\";\nimport { cutScenes } from \"../components/seeds\";\n\nexport default class Simulation extends React.Component {\n    goNext = () => {\n        hashHistory.push(cutScenes[this.props.params.id].link);\n    };\n    render() {\n        return (\n            <div className=\"full-height\" style={{ padding: \"20px 40px\" }}>\n                <Segment basic>\n                    <Grid>\n                        <Grid.Row>\n                            <div style={{margin: \"auto\"}}>   \n                                <Image\n                                    src={\n                                        getAppConfig().apiUrls.assetLib +\n                                        \"/images/configurable/logo.png\"\n                                    }\n                                    size=\"medium\"\n                                />\n                                <Segment raised inverted>\n                                    <h1 style={{color:\"#ffc900\"}}>\n                                        {cutScenes[this.props.params.id].title}\n                                    </h1>\n                                    <p dangerouslySetInnerHTML={{ __html: cutScenes[this.props.params.id].content }}/>\n                                    <Button\n                                        content={\n                                            cutScenes[this.props.params.id]\n                                                .buttonText\n                                        }\n                                        size=\"huge\"\n                                        fluid\n                                        primary\n                                        labelPosition=\"right\"\n                                        icon=\"right chevron\"\n                                        onClick={this.goNext}\n                                    />\n                                    <br/>\n                                </Segment>\n                            </div>\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// Import Actions and Helpers\n// -------------------------------------\n\n// Import from Config\n// -------------------------------------\nimport { Loading } from \"globals/Loading.react\";\nimport ErrorPage from \"globals/error/ErrorPage.react\";\n\n// Import Components\n// -------------------------------------\nimport Simulation from \"./pages/Simulation.react\";\nimport FlexBox from \"globals/flexbox/FlexBox.react\";\n\nexport class SimulationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchCompleted: false,\n            error: null,\n            errorMsg: null\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            fetchCompleted: true,\n            barred: true\n        });\n    }\n\n    render() {\n        if (!this.state.fetchCompleted) return <Loading />;\n        else if (this.state.fetchCompleted) {\n            return (\n                <FlexBox>\n                    <div\n                        className=\"isRelative\"\n                        style={{ height: \"700px\", width: \"100%\" }}\n                    >\n                        <ToastContainer />\n                        <Simulation {...this.props} />\n                    </div>\n                </FlexBox>\n            );\n        } else {\n            return <ErrorPage msg={\"Error code \" + this.state.errorMsg} />;\n        }\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function */ state => {\n    return {\n        auth: state.auth\n    };\n};\n\nconst mapDispatchToProps = /* istanbul ignore next - redux function */ dispatch => {\n    return {\n        actions: {}\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SimulationContainer);\n","let simParams = {\n  uam: 1000000,\n  ubm: 100000,\n  uap: 100,\n  ubp: 1000,\n  rvm: 30,\n  slb: 300000,\n  slg: 0.15,\n  cac: 100,\n  suc: 50,\n  fub: 0.3,\n  uas: 0.01,\n  ubs: 0.02,\n  dsc: 0.08,\n  utl: 0.541667\n};\n\nexport { simParams };\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport {\n    Grid,\n    Segment,\n    Modal,\n    Button,\n    Image\n} from \"semantic-ui-react\";\n\n// Import Actions and Helpers\n// -------------------------------------\nimport { resultText } from \"../components/seeds\";\nimport { simParams } from \"../components/logic\";\n\nimport InfoPane from \"../components/InfoPane.react\";\nimport TopBar from \"../components/TopBar.react\";\n\nexport default class Result extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            coeff: Object.assign({}, this.props.simParams, simParams),\n            finalValuation: 0,\n            modalOpen: false\n        };\n    }\n\n    componentDidMount() {\n        let finalValuation = 1;\n        this.setState({ finalValuation });\n    }\n\n    handleSubmit = () => {\n        this.setState({ modalOpen: true });\n    };\n\n    modalClose = () => this.setState({ modalOpen: false });\n\n    render() {\n        return (\n            <div className=\"full-height\" style={{ padding: \"20px 40px\" }}>\n                <Segment basic>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                <InfoPane\n                                    key={`infopane-${this.state.monthId}`}\n                                    title={resultText.title}\n                                    buttonText={resultText.buttonText}\n                                    handleSubmit={this.handleSubmit}\n                                    content={resultText.content}\n                                />\n                            </Grid.Column>\n                            <Grid.Column width={12}>\n                                <TopBar\n                                    constraint={`Acquistion valuation of Rs. ${Math.max(\n                                        parseInt(\n                                            this.state.finalValuation / 100000,\n                                            0\n                                        ) / 100,\n                                        0.25\n                                    )} crores`}\n                                    image={\n                                        \"/assets/images/configurable/money.png\"\n                                    }\n                                    presenter={\n                                        \"/assets/images/configurable/characters/mentor.png\"\n                                    }\n                                    marginTop={\"40px\"}\n                                />\n                                <Segment\n                                    inverted\n                                    style={{\n                                        textAlign: \"center\",\n                                        fontSize: \"2em\",\n                                        position: \"relative\",\n                                        zIndex: \"2\"\n                                    }}\n                                >\n                                    You made{\" \"}\n                                    {parseInt(\n                                        (Math.max(\n                                            this.state.finalValuation,\n                                            2500000\n                                        ) *\n                                            (100 -\n                                                this.props.simParams\n                                                    .dilution)) /\n                                            10000000,\n                                        0\n                                    ) / 100}{\" \"}\n                                    crores!\n                                </Segment>\n                                <Segment raised style={{ padding: \"15px\" }}>\n                                    \n                                </Segment>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n                <Modal basic open={this.state.modalOpen}>\n                    <Modal.Content>\n                        <Image\n                            src=\"/assets/images/configurable/certificate.jpg\"\n                            fluid\n                        />\n                        <div\n                            style={{\n                                position: \"absolute\",\n                                top: \"36%\",\n                                left: \"60%\",\n                                width: \"40%\",\n                                textAlign: \"center\",\n                                lineHeight: \"1.2\",\n                                fontSize: \"2.5em\",\n                                color: \"#000000\",\n                                transform: \"translateX(-50%)\"\n                            }}\n                        >\n                            {\n                                \n                            }\n                        </div>\n                    </Modal.Content>\n                    <Modal.Actions style={{ textAlign: \"center\" }}>\n                        <Button\n                            primary\n                            content=\"Close\"\n                            onClick={this.modalClose}\n                        />\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// Import Actions and Helpers\n// -------------------------------------\n// import OpsManagerAction from \"./redux/OpsManager.action.react\";\nimport SimManagerAction from \"./redux/SimManager.action.react\";\n\n// Import from Config\n// -------------------------------------\n\n// Import Components\n// -------------------------------------\nimport Result from \"./pages/Result.react\";\nimport FlexBox from \"globals/flexbox/FlexBox.react\";\n\nexport class ResultContainer extends React.Component {\n    componentDidMount() {\n        console.log(\"Simulation Id: \", this.props.params.id);\n        this.props.actions.endSim(this.props.params.id);\n        // if (_.startsWith(this.props.simParams.lastLocation, \"operations\"))\n        //     this.props.actions.setLastLocation(\"result\").then(() => {\n        //         if (!this.props.simParams.simOver) this.props.actions.endSim();\n        //     });\n    }\n    render() {\n        return (\n            <FlexBox>\n                <div\n                    className=\"isRelative\"\n                    style={{ height: \"700px\", width: \"100%\" }}\n                >\n                    <ToastContainer />\n                    <Result {...this.props} />\n                </div>\n            </FlexBox>\n        );\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function */ state => {\n    return {\n        auth: state.auth,\n        simParams: state.simParams,\n        opsRecords: state.opsRecords,\n        questions: state.questions\n    };\n};\n\nconst mapDispatchToProps = /* istanbul ignore next - redux function */ dispatch => {\n    return {\n        actions: {\n            setLastLocation: location => {\n                return dispatch(SimManagerAction.setLastLocation(location));\n            },\n            endSim: (simulationId) => {\n                return dispatch(SimManagerAction.endSim(simulationId));\n            }\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ResultContainer);\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Grid, Input, Segment, Button } from \"semantic-ui-react\";\nimport { hashHistory } from \"react-router\";\n\n// Import Actions and Helpers\n// -------------------------------------\nimport InfoPane from \"../components/InfoPane.react\";\nimport TopBar from \"../components/TopBar.react\";\nimport HTMLSlider from \"globals/carousel/HTMLSlider.react\";\nimport FlexBox from \"globals/flexbox/FlexBox.react\";\n\nexport default class Surveyor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: this.props.interview.questions,\n            answered: [],\n            currentInput: \"\"\n        };\n    }\n\n    handleSubmit = () => {\n        let simulationId = this.props.params.id;\n        let url = this.props.interview.link + \"/\" + simulationId\n        this.props.actions\n            .saveAnswers(this.state.answered)\n            .then(() => hashHistory.push(url));\n    };\n\n    handleInputChange = e => this.setState({ currentInput: e.target.value });\n    handleKeyDown = e => {\n        if (e.keyCode === 9) e.preventDefault();\n    };\n\n    saveAnswer = (questionId, q, option, attributes, value, competencies) => {\n        let answered = _.cloneDeep(this.state.answered);\n        let thisAnswer = _.find(answered, { questionId: questionId });\n        if (thisAnswer !== undefined)\n            answered.splice(answered.indexOf(thisAnswer), 1);\n        answered.push({\n            questionId: questionId,\n            question: q,\n            response: option === undefined ? this.state.currentInput : option,\n            value: value,\n            competencies: competencies,\n            attributes: attributes\n        });\n        if (!(this.state.currentInput === \"\" && option === undefined))\n            this.setState({ answered: answered });\n    };\n\n    render() {\n        let questionCards = _.map(this.state.questions, (elm, idx) => {\n            console.log(elm.options !== undefined)\n            return (\n                <div\n                    key={`question-${idx}`}\n                    style={{\n                        height: \"400px\",\n                        width: \"100%\",\n                        background: `url(${this.props.interview.background})`,\n                        backgroundSize: \"cover\",\n                        textAlign: \"center\",\n                        position: \"relative\"\n                    }}\n                >\n                    <div\n                        style={{\n                            position: \"absolute\",\n                            top: \"20px\",\n                            left: \"20px\"\n                        }}\n                    >\n                        <h1>Q.{idx + 1}</h1>\n                    </div>\n                    <FlexBox>\n                        <div style={{ width: \"90%\" }}>\n                            <h1>{elm.question}</h1>\n                            <br />\n                            {elm.options.length === 0 && (\n                                <Input\n                                    fluid\n                                    size=\"massive\"\n                                    onFocus={this.handleInputChange}\n                                    onChange={this.handleInputChange}\n                                    onBlur={() =>\n                                        this.saveAnswer(\n                                            elm.questionId,\n                                            elm.question\n                                        )\n                                    }\n                                    onKeyDown={this.handleKeyDown}\n                                />\n                            )}\n                            {elm.options !== undefined &&\n                                _.map(elm.options, (option, idx2) => {\n                                    console.log(option);\n                                    let thisAnswer = _.find(\n                                        this.state.answered,\n                                        {\n                                            questionId: elm.questionId\n                                        }\n                                    );\n                                    return (\n                                        <Button\n                                            key={`option-${idx}-${idx2}`}\n                                            color={\n                                                thisAnswer !== undefined &&\n                                                thisAnswer.response ===\n                                                    option[1]\n                                                    ? \"brown\"\n                                                    : \"grey\"\n                                            }\n                                            content={option.option}\n                                            onClick={() =>\n                                                this.saveAnswer(\n                                                    elm.questionId,\n                                                    elm.question,\n                                                    option.option,\n                                                    option.attributes,\n                                                    option.value,\n                                                    option.competencies\n                                                )\n                                            }\n                                            style={{ marginBottom: \"5px\" }}\n                                        />\n                                    );\n                                })}\n                        </div>\n                    </FlexBox>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"full-height\" style={{ padding: \"40px 40px\" }}>\n                <Segment basic>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={5}>\n                                <InfoPane\n                                    title={this.props.interview.title}\n                                    content={this.props.interview.content}\n                                    buttonText={this.props.interview.buttonText}\n                                    handleSubmit={this.handleSubmit}\n                                    disabled={\n                                        this.state.answered.length !==\n                                        this.props.interview.questions.length\n                                    }\n                                />\n                            </Grid.Column>\n                            <Grid.Column width={11}>\n                                <TopBar\n                                    image={\n                                        \"/assets/images/configurable/interview.png\"\n                                    }\n                                    presenter={this.props.interview.presenter}\n                                    constraint={\"Questions Answered\"}\n                                    maxConstraint={this.state.questions.length}\n                                    cost={this.state.answered.length}\n                                />\n                                <div\n                                    style={{\n                                        height: \"556px\",\n                                        overflow: \"hidden\",\n                                        marginTop: \"-64px\",\n                                        paddingTop: \"56px\",\n                                        position: \"relative\",\n                                        zIndex: \"2\"\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            height: \"514px\",\n                                            overflow: \"hidden\"\n                                        }}\n                                    >\n                                        <div style={{ padding: \"30px 0\" }}>\n                                            <HTMLSlider\n                                                sliderItems={questionCards}\n                                                slidesToShow={1}\n                                                autoPlay={false}\n                                                dots={false}\n                                                arrows={false}\n                                                arrowBtns={true}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// Import Actions and Helpers\n// -------------------------------------\nimport QuestionManagerAction from \"./redux/QuestionManager.action.react\";\n\n// Import from Config\n// -------------------------------------\nimport { interviews } from \"./components/seeds\";\n\n// Import Components\n// -------------------------------------\nimport Surveyor from \"./pages/Surveyor.react\";\nimport FlexBox from \"globals/flexbox/FlexBox.react\";\n\nexport class SurveyContainer extends React.Component {\n    render() {\n        return (\n            <FlexBox>\n                <div\n                    className=\"isRelative\"\n                    style={{ height: \"700px\", width: \"100%\" }}\n                >\n                    <ToastContainer />\n                    <Surveyor\n                        {...this.props}\n                        interview={interviews[this.props.params.id]}\n                    />\n                </div>\n            </FlexBox>\n        );\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function */ state => {\n    return {\n        auth: state.auth,\n        questions: state.questions\n    };\n};\n\nconst mapDispatchToProps = /* istanbul ignore next - redux function */ dispatch => {\n    return {\n        actions: {\n            saveAnswers: answers => {\n                return dispatch(QuestionManagerAction.saveAnswers(answers));\n            }\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SurveyContainer);\n"],"sourceRoot":""}