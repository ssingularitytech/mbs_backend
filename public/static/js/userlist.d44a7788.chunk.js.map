{"version":3,"sources":["app/simulation/components/seeds.js","app/simulation/redux/Analytics.action.react.js","app/simulation/pages/UserList.react.jsx","app/simulation/UserListContainer.react.jsx"],"names":["welcomeText","title","content","buttonText","link","resultText","cutScenes","1","headline","interviews","background","presenter","questions","questionId","question","options","0","option","value","analytical","creative","methodical","frugal","competencies","problem_solving","decision_making","balanced_approach","time_management","resourcefulness","attributes","2","3","simulations","analytics","endpoints","name","4","5","score","cell","AnalyticsAction","getUserList","dispatch","getState","Request","fetch","then","response","json","data","catch","err","console","log","getUserData","id","getUserListOfSimulation","UserList","props","downloadCSV","originalItems","_","map","reactTable","getResolvedState","sortedData","items","each","oItem","basicItem","email","institution","simulation_id","detailedItem","undefined","params","simulation","endpoint","key","overall","fullItem","merge","push","length","replacer","header","Object","keys","csv","row","fieldName","JSON","stringify","join","unshift","hiddenElement","document","createElement","href","encodeURI","target","download","click","state","userList","record","user_data","userBasicData","userDetailedData","simParams","competencyMap","basicColumns","Header","accessor","d","Cell","Button","as","primary","size","style","textAlign","minWidth","filterMethod","filter","Filter","onChange","event","width","detailedColumns","this","fullColumns","concat","Segment","Image","src","display","marginRight","onClick","floated","ref","r","filterable","defaultFilterMethod","column","pivotId","String","includes","columns","defaultPageSize","className","PureComponent","UserListContainer","fetchComplete","actions","setState","Math","random","React","Component","connect","auth"],"mappings":"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","file":"static/js/userlist.d44a7788.chunk.js","sourcesContent":["let welcomeText = {\n    title: \"Welcome to the Personality Profiler\",\n    content:\n        \"Welcome to the Magickbricks Know your personlaity Challenge!<br><br> You are playing as an ed-tech entprepreneur who is looking to launch an app to teach the youth of today their mother-tongue.<br><br> M-Permutator is the most sought-after incubator in the country and you are looking to get in there to maximize your chances of being funded and growing into the next killer app!<br><br> Go through your pitch deck to better understand the business idea, so that you can more forward in this simulation. Best of luck!\",\n    buttonText: \"Start the Simulation\",\n    link: \"/simulation/1\"\n};\nlet resultText = {\n    title: \"Congratulations!\",\n    content:\n        \"You are at a stage that every entrepreneur aspires to be! You have sold your company and made returns for your investors and yourself. <br><br> Let us see how you did....\",\n    buttonText: \"View Certificate\"\n};\nlet cutScenes = {\n    1: {\n        title: \"Personality profile challenge\",\n        headline: \"Know your personality \",\n        content:\n            \"The wait is over! <br/><br/>Please click on the Play button. Answer all the questions honestly.<br/> We will process your application and announce the winners shortly. <br/><br/>Best of Luck!\",\n        buttonText: \"Play\",\n        link: \"/simulation_questions/1\"\n    }\n};\n\nlet interviews = {\n    1: {\n        title: \"Application Form\",\n        background:\n            \"/assets/images/configurable/simPics/blurred_application.jpg\",\n        presenter: \"/assets/images/configurable/characters/hrlady.png\",\n        content:\n            \" The wait is over! Fill in the application form along with your business plan within the next 3 days. We will process your application and announce the winners shortly. Best of Luck!\",\n        buttonText: \"Submit Application\",\n        link: \"/result\",\n        questions: [\n            {\n                questionId: \"A4\",\n                question: \"Why do you think you would make a good entrepreneur?\",\n                options: {\n                    0:\n                    {\n                        option: \"I am persuasive\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"persuasive\"]\n                    },\n                    1:\n                    {\n                        option: \"I am unemotional\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"unemotional\"]\n                    },\n                    2:\n                    {\n                        option: \"I am self-confident\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"self-confident\"]\n                    },\n                    3:\n                    {\n                        option: \"I am energetic\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"energetic\"]\n                    }\n                }\n            },\n            {\n                questionId: \"A5\",\n                question: \"What is your greatest weakness?\",\n                options: {\n                    0:\n                    {\n                        option: \"I am too stern\",\n                        value: {\n                            analytical: 1, \n                            creative: 1, \n                            methodical: 1, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Stern\"]\n                    },\n                    1:\n                    {\n                        option: \"I am too inhibited\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Inhibited\"]\n                    },\n                    2:\n                    {\n                        option: \"I am too restless\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Restless\"]\n                    },\n                    3:\n                    {\n                        option: \"I am too stubborn\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Stubborn\"]\n                    }\n                }\n            },\n            {\n                questionId: \"A6\",\n                question: \"What is your biggest strength?\",\n                options: {\n                    0:\n                    {\n                        option: \"I am tactful\",\n                        value: {\n                            analytical: 1, \n                            creative: 1, \n                            methodical: 1, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Tactful\"]\n                    },\n                    1:\n                    {\n                        option: \"I am clear-thinking\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Clear-thinking\"]\n                    },\n                    2:\n                    {\n                        option: \"I am forward-looking\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 1, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 0, \n                            decision_making: 1, \n                            balanced_approach: 0, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Forward-looking\"]\n                    },\n                    3:\n                    {\n                        option: \"I am courageous\",\n                        value: {\n                            analytical: 0, \n                            creative: 1, \n                            methodical: 0, \n                            frugal: 1\n                        },\n                        competencies: {\n                            problem_solving: 1, \n                            decision_making: 1, \n                            balanced_approach: 1, \n                            time_management: 1, \n                            resourcefulness: 1\n                        },\n                        attributes: [\"Courageous\"]\n                    }\n                }\n            }\n        ]\n    }\n};\n\nlet simulations = {\n    1: {\n        title: \"Sparta Arena P&G Grid\",\n        headline: \"Sparta Arena P&G Grid\",\n        content: \"Download following excel sheet fill it in and re-upload it here\",\n        buttonText: \"Download\",\n        link: \"assets/samples/SpartaArenaPGGrid_Final_5Feb.xlsm\",\n        analytics: {\n            endpoints: {\n                1: {\n                    name: \"cprp\",\n                },\n                2: {\n                    name: \"outlay\",\n                },\n                3: {\n                    name: \"pt\",\n                },\n                4: {\n                    name: \"grp\",\n                },\n                5: {\n                    name: \"timeSlot\",\n                },\n            },\n            score: {\n                name: \"Score\",\n                cell: \"G3\"\n            }\n        }\n    }\n}\n\nexport {\n    welcomeText,\n    resultText,\n    cutScenes,\n    interviews,\n    simulations\n};\n","const getUserList = /* istanbul ignore next - Request and Pure passthrough */ () => {\n    return (dispatch, getState, Request) => {\n        return Request.fetch(\"/api/v1/simulation_results\")\n            .then(response => {\n                return response.json().then(data => {\n                    return data;\n                });\n            })\n            .catch(err => {\n                console.log(err);\n                return null;\n            });\n    };\n};\n\nconst getUserListOfSimulation = /* istanbul ignore next - Request and Pure passthrough */ id => {\n    return (dispatch, getState, Request) => {\n        return Request.fetch(\"/api/v1/simulation_results/simulation_index/\" + id)\n            .then(response => {\n                return response.json().then(data => {\n                    return data;\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}\n\nconst getUserData = /* istanbul ignore next - Request and Pure passthrough */ id => {\n    return (dispatch, getState, Request) => {\n        return Request.fetch(\"/api/v1/simulation_results/\" + id + \"/simulation_show/\" + \"1\")\n            .then(response => {\n                return response.json().then(data => {\n                    return data;\n                });\n            })\n            .catch(err => {\n                console.log(err);\n                return null;\n            });\n    };\n};\n\nclass AnalyticsAction {\n    static getUserList = getUserList;\n    static getUserData = getUserData;\n    static getUserListOfSimulation = getUserListOfSimulation;\n}\n\nexport default AnalyticsAction;\n","import React, { PureComponent } from \"react\";\nimport _ from \"lodash\";\nimport { Segment, Button, Image } from \"semantic-ui-react\";\nimport ReactTable from \"react-table\";\nimport { simulations } from \"../components/seeds\";\nimport \"react-table/react-table.css\";\n\nexport default class UserList extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: _.map(this.props.userList, record => {\n                let data = record.user_data;\n                console.log(\"Data : \", record)\n                let userBasicData = {\n                    id: record.id ,\n                    name: \"\",\n                    simulation_id: data.simulation_id,\n                    email: record.email,\n                }\n                let userDetailedData = {\n                    overall:\n                        data.simParams.competencyMap !== undefined\n                            ? data.simParams.competencyMap.overall\n                            : \"\",\n                    creative:\n                        data.simParams.competencyMap !== undefined\n                            ? data.simParams.competencyMap.creative\n                            : \"\",\n                    analytical:\n                        data.simParams.competencyMap !== undefined\n                            ? data.simParams.competencyMap.analytical\n                            : \"\",\n                    methodical:\n                        data.simParams.competencyMap !== undefined\n                            ? data.simParams.competencyMap.methodical\n                            : \"\",\n                    frugal:\n                        data.simParams.competencyMap !== undefined\n                            ? data.simParams.competencyMap.frugal\n                            : \"\"\n                }\n                let result = _.merge(userBasicData, userDetailedData);\n                return result;\n            })\n        };\n    }\n\n    downloadCSV = () => {\n        let originalItems = _.map(\n            this.reactTable.getResolvedState().sortedData,\n            \"_original\"\n        );\n        let items = [];\n        _.each(originalItems, oItem => {\n            let basicItem = {\n                id: oItem.id,\n                name: oItem.name,\n                email: oItem.email,\n                institution: oItem.simulation_id,\n                score: oItem.score\n            }\n            let detailedItem = {};\n            if(this.props.params.simulation_id !== undefined){\n                let simulation = simulations[this.props.params.simulation_id]\n                _.each(simulation.analytics.endpoints, function(endpoint, key){\n                    detailedItem[endpoint.name] = oItem[endpoint.name]\n                });\n            } else {\n                detailedItem['overall'] = oItem.overall\n                detailedItem['creative'] = oItem.creative\n                detailedItem['analytical'] = oItem.analytical\n                detailedItem['methodical'] = oItem.methodical\n                detailedItem['frugal'] = oItem.frugal\n            }\n            let fullItem = _.merge(basicItem, detailedItem);\n            items.push(fullItem);\n        });\n\n        if (items.length > 0) {\n            const replacer = (key, value) => (value === null ? \"\" : value); // specify how you want to handle null values here\n            const header = Object.keys(items[0]);\n            let csv = items.map(row =>\n                header\n                    .map(fieldName => JSON.stringify(row[fieldName], replacer))\n                    .join(\",\")\n            );\n            csv.unshift(header.join(\",\"));\n            csv = csv.join(\"\\r\\n\");\n            var hiddenElement = document.createElement(\"a\");\n            hiddenElement.href =\n                \"data:text/csv;charset=utf-8,\" + encodeURI(csv);\n            hiddenElement.target = \"_blank\";\n            hiddenElement.download = \"Player-data.csv\";\n            hiddenElement.click();\n        }\n    };\n\n    render() {\n        let basicColumns = [\n            {\n                Header: \"Id\",\n                id: \"id\",\n                accessor: d => d.id,\n                Cell: ({ value }) => (\n                    <Button\n                        as=\"a\"\n                        primary\n                        size=\"mini\"\n                        content=\"View\"\n                        href={`/#/analytics/${value}`}\n                        target = \"_blank\"\n                    />\n                ),\n                style: { textAlign: \"center\" }\n            },\n            {\n                Header: \"Name\",\n                id: \"name\",\n                accessor: d => d.name,\n                minWidth: 256\n            },\n            {\n                Header: \"Simulation\",\n                id: \"Simulation\",\n                accessor: d => d.simulation_id,\n                minWidth: 256\n            },\n            {\n                Header: \"Email\",\n                id: \"email\",\n                accessor: d => d.email,\n            },\n            {\n                Header: \"Score\",\n                id: \"overall\",\n                accessor: d => d.score,\n                filterMethod: (filter, row) => {\n                    switch (filter.value) {\n                        case \"zero\":\n                            return row[filter.id] === 0;\n                        case \"low\":\n                            return row[filter.id] < 40 && row[filter.id] > 0;\n                        case \"medium\":\n                            return row[filter.id] < 80 && row[filter.id] > 40;\n                        case \"high\":\n                            return row[filter.id] < 100 && row[filter.id] > 80;\n                        case \"full\":\n                            return row[filter.id] === 100;\n                        case \"all\":\n                        default:\n                            return true;\n                    }\n                },\n                Filter: ({ filter, onChange }) => (\n                    <select\n                        onChange={event => onChange(event.target.value)}\n                        style={{ width: \"100%\" }}\n                        value={filter ? filter.value : \"all\"}\n                    >\n                        <option value=\"all\">Show All</option>\n                        <option value=\"zero\">0</option>\n                        <option value=\"low\">0-40</option>\n                        <option value=\"medium\">40-80</option>\n                        <option value=\"high\">80-99</option>\n                        <option value=\"full\">100</option>\n                    </select>\n                ),\n                style: { textAlign: \"center\" }\n            }\n        ];\n        let detailedColumns = [];\n        if(this.props.params.simulation_id !== undefined){\n            let simulation = simulations[this.props.params.simulation_id]\n            detailedColumns = _.map(simulation.analytics.endpoints, function(endpoint, key){\n                return {\n                    Header: endpoint.name,\n                    id: endpoint.name,\n                    accessor: d => d[endpoint.name],\n                    filterMethod: (filter, row) => {\n                        switch (filter.value) {\n                            case \"zero\":\n                                return row[filter.id] === 0;\n                            case \"low\":\n                                return row[filter.id] < 40 && row[filter.id] > 0;\n                            case \"medium\":\n                                return row[filter.id] < 80 && row[filter.id] > 40;\n                            case \"high\":\n                                return row[filter.id] < 100 && row[filter.id] > 80;\n                            case \"full\":\n                                return row[filter.id] === 100;\n                            case \"all\":\n                            default:\n                                return true;\n                        }\n                    },\n                    Filter: ({ filter, onChange }) => (\n                        <select\n                            onChange={event => onChange(event.target.value)}\n                            style={{ width: \"100%\" }}\n                            value={filter ? filter.value : \"all\"}\n                        >\n                            <option value=\"all\">Show All</option>\n                            <option value=\"zero\">0</option>\n                            <option value=\"low\">0-40</option>\n                            <option value=\"medium\">40-80</option>\n                            <option value=\"high\">80-99</option>\n                            <option value=\"full\">100</option>\n                        </select>\n                    ),\n                    style: { textAlign: \"center\" }\n                }\n            });\n        } else {\n            detailedColumns = [\n                {\n                    Header: \"Creative\",\n                    id: \"creative\",\n                    accessor: d => d.creative,\n                    filterMethod: (filter, row) => {\n                        switch (filter.value) {\n                            case \"zero\":\n                                return row[filter.id] === 0;\n                            case \"low\":\n                                return row[filter.id] < 40 && row[filter.id] > 0;\n                            case \"medium\":\n                                return row[filter.id] < 80 && row[filter.id] > 40;\n                            case \"high\":\n                                return row[filter.id] < 100 && row[filter.id] > 80;\n                            case \"full\":\n                                return row[filter.id] === 100;\n                            case \"all\":\n                            default:\n                                return true;\n                        }\n                    },\n                    Filter: ({ filter, onChange }) => (\n                        <select\n                            onChange={event => onChange(event.target.value)}\n                            style={{ width: \"100%\" }}\n                            value={filter ? filter.value : \"all\"}\n                        >\n                            <option value=\"all\">Show All</option>\n                            <option value=\"zero\">0</option>\n                            <option value=\"low\">0-40</option>\n                            <option value=\"medium\">40-80</option>\n                            <option value=\"high\">80-99</option>\n                            <option value=\"full\">100</option>\n                        </select>\n                    ),\n                    style: { textAlign: \"center\" }\n                },\n                {\n                    Header: \"Analytical\",\n                    id: \"analytical\",\n                    accessor: d => d.analytical,\n                    filterMethod: (filter, row) => {\n                        switch (filter.value) {\n                            case \"zero\":\n                                return row[filter.id] === 0;\n                            case \"low\":\n                                return row[filter.id] < 40 && row[filter.id] > 0;\n                            case \"medium\":\n                                return row[filter.id] < 80 && row[filter.id] > 40;\n                            case \"high\":\n                                return row[filter.id] < 100 && row[filter.id] > 80;\n                            case \"full\":\n                                return row[filter.id] === 100;\n                            case \"all\":\n                            default:\n                                return true;\n                        }\n                    },\n                    Filter: ({ filter, onChange }) => (\n                        <select\n                            onChange={event => onChange(event.target.value)}\n                            style={{ width: \"100%\" }}\n                            value={filter ? filter.value : \"all\"}\n                        >\n                            <option value=\"all\">Show All</option>\n                            <option value=\"zero\">0</option>\n                            <option value=\"low\">0-40</option>\n                            <option value=\"medium\">40-80</option>\n                            <option value=\"high\">80-99</option>\n                            <option value=\"full\">100</option>\n                        </select>\n                    ),\n                    style: { textAlign: \"center\" }\n                },\n                {\n                    Header: \"Methodical\",\n                    id: \"methodical\",\n                    accessor: d => d.methodical,\n                    filterMethod: (filter, row) => {\n                        switch (filter.value) {\n                            case \"zero\":\n                                return row[filter.id] === 0;\n                            case \"low\":\n                                return row[filter.id] < 40 && row[filter.id] > 0;\n                            case \"medium\":\n                                return row[filter.id] < 80 && row[filter.id] > 40;\n                            case \"high\":\n                                return row[filter.id] < 100 && row[filter.id] > 80;\n                            case \"full\":\n                                return row[filter.id] === 100;\n                            case \"all\":\n                            default:\n                                return true;\n                        }\n                    },\n                    Filter: ({ filter, onChange }) => (\n                        <select\n                            onChange={event => onChange(event.target.value)}\n                            style={{ width: \"100%\" }}\n                            value={filter ? filter.value : \"all\"}\n                        >\n                            <option value=\"all\">Show All</option>\n                            <option value=\"zero\">0</option>\n                            <option value=\"low\">0-40</option>\n                            <option value=\"medium\">40-80</option>\n                            <option value=\"high\">80-99</option>\n                            <option value=\"full\">100</option>\n                        </select>\n                    ),\n                    style: { textAlign: \"center\" }\n                },\n                {\n                    Header: \"Frugal\",\n                    id: \"frugal\",\n                    accessor: d => d.frugal,\n                    filterMethod: (filter, row) => {\n                        switch (filter.value) {\n                            case \"zero\":\n                                return row[filter.id] === 0;\n                            case \"low\":\n                                return row[filter.id] < 40 && row[filter.id] > 0;\n                            case \"medium\":\n                                return row[filter.id] < 80 && row[filter.id] > 40;\n                            case \"high\":\n                                return row[filter.id] < 100 && row[filter.id] > 80;\n                            case \"full\":\n                                return row[filter.id] === 100;\n                            case \"all\":\n                            default:\n                                return true;\n                        }\n                    },\n                    Filter: ({ filter, onChange }) => (\n                        <select\n                            onChange={event => onChange(event.target.value)}\n                            style={{ width: \"100%\" }}\n                            value={filter ? filter.value : \"all\"}\n                        >\n                            <option value=\"all\">Show All</option>\n                            <option value=\"zero\">0</option>\n                            <option value=\"low\">0-40</option>\n                            <option value=\"medium\">40-80</option>\n                            <option value=\"high\">80-99</option>\n                            <option value=\"full\">100</option>\n                        </select>\n                    ),\n                    style: { textAlign: \"center\" }\n                }\n            ];\n        }\n        let fullColumns = basicColumns.concat(detailedColumns);\n        return (\n            <Segment>\n                <h1>\n                    <Image\n                        src=\"assets/images/configurable/logo.png\"\n                        size=\"small\"\n                        style={{ display: \"inline-block\", marginRight: \"15px\" }}\n                    />\n                    Player List\n                    <Button\n                        primary\n                        content=\"Download CSV\"\n                        onClick={this.downloadCSV}\n                        floated=\"right\"\n                    />\n                </h1>\n                <ReactTable\n                    data={this.state.userList}\n                    ref={r => (this.reactTable = r)}\n                    filterable\n                    defaultFilterMethod={(filter, row, column) => {\n                        const id = filter.pivotId || filter.id;\n                        return row[id] !== undefined\n                            ? String(row[id]).includes(filter.value)\n                            : true;\n                    }}\n                    columns={fullColumns}\n                    defaultPageSize={10}\n                    className=\"-striped -highlight\"\n                />\n            </Segment>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// Import Actions and Helpers\n// -------------------------------------\nimport AnalyticsAction from \"./redux/Analytics.action.react\";\nimport { Loading } from \"globals/Loading.react\";\n\n// Import from Config\n// -------------------------------------\n\n// Import Components\n// -------------------------------------\nimport UserList from \"./pages/UserList.react\";\n\n/**\n * The AnalyticsContainer is the top level component connected to the redux store.\n */\nexport class UserListContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [],\n            fetchComplete: false\n        };\n    }\n\n    componentDidMount() {\n        if(this.props.params.simulation_id === undefined){\n            this.props.actions.getUserList().then(data => {\n                this.setState({ userList: data, fetchComplete: true });\n            });\n        } else{\n            this.props.actions.getUserListOfSimulation(this.props.params.simulation_id).then(data => {\n                this.setState({ userList: data, fetchComplete: true });\n            });\n        }\n        \n    }\n\n    render() {\n        if (!this.state.fetchComplete) return <Loading />;\n        else\n            return (\n                <UserList\n                    {...this.props}\n                    userList={this.state.userList}\n                    key={`list-${Math.random()}`}\n                />\n            );\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function */ state => {\n    return {\n        auth: state.auth\n    };\n};\n\nconst mapDispatchToProps = /* istanbul ignore next - redux function */ dispatch => {\n    return {\n        actions: {\n            getUserList: () => {\n                return dispatch(AnalyticsAction.getUserList());\n            },\n            getUserListOfSimulation: (id) => {\n                return dispatch(AnalyticsAction.getUserListOfSimulation(id))\n            }\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserListContainer);\n"],"sourceRoot":""}