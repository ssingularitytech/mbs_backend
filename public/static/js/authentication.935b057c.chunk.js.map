{"version":3,"sources":["globals/flexbox/FlexBox.react.jsx","globals/semantic/QuoButton.react.jsx","state/authentication/components/Login.react.jsx","state/authentication/components/ForgotPassword.react.jsx","state/authentication/components/AuthConfirmation.react.jsx","state/authentication/AuthenticationContainer.react.jsx"],"names":["FlexBox","defaultValues","display","height","this","props","width","alignItems","vertical","justifyContent","horzontal","backgroundColor","background","flexDirection","direction","position","templateWrap","style","top","left","right","bottom","overflow","overflowY","children","React","Component","defaultProps","QuoButton","setHover","setState","hovered","removeHover","state","buttonStyle","auth","user","undefined","client","appConfiguration","passedProps","dispatch","onMouseEnter","disabled","onMouseLeave","connect","Login","handleChange","e","name","value","handleSubmit","email","password","isFetching","actions","login","apiUrl","then","response","status","errorRaised","errorMessages","err","errors","setAuthenticated","catch","error","getErrors","location","query","message","_","join","boxStyle","AppConfig","colors","master","color","marginTop","loginPage","placeholder","text","Form","loading","onSubmit","Message","content","Input","label","authentication","type","onChange","onCopy","preventDefault","onPaste","help","Button","primary","clientApp","Divider","fluid","secondary","as","href","ForgotPassword","success","forgotPassword","successMessages","getSuccess","forgotPasswordPage","to","routes","AuthConfirmation","logout","setLoggedOut","cancel","hashHistory","goBack","padding","margin","textAlign","onClick","cursor","AuthenticationContainer","authenticated","session","pathname","authRoot","simParams","lastLocation","authenticatedRoot","push","updateName","target","updateEmail","updatePassword","confirm","togglePasswordVisibility","showPassword","validateEmail","test","submitted","register","full_messages","isUserLoggedIn","backStyle","minWidth","minHeight","overlayStyle","component","hidden","visible","header","list","Field","Popup","trigger","getAppConfig","registration","restricted","allowedDomains","on","icon","Icon","link","Segment","basic","autoPlay","muted","loop","src","alt","Grid","padded","divided","Row","Column","AuthenticationAction","domain","omniAuth","userDetail","omniAuthLogin"],"mappings":"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","file":"static/js/authentication.935b057c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FlexBox extends React.Component {\n    static propTypes = {\n        vertical: PropTypes.string,\n        horzontal: PropTypes.string,\n        templateWrap: PropTypes.bool\n    };\n\n    static defaultProps = {\n        templateWrap: false\n    };\n\n    render() {\n        let defaultValues = {\n            display: 'flex',\n            height: this.props.height || '100%',\n            width: 'calc(100% + 1px)',\n            alignItems: this.props.vertical || 'center',\n            justifyContent: this.props.horzontal || 'center',\n            backgroundColor: this.props.background || 'inherit',\n            flexDirection: this.props.direction || 'row',\n            position: \"relative\"\n        };\n\n        let containerStyle = {\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            overflow: \"hidden\"\n        };\n        let scrollerStyle = {\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            bottom: \"0\",\n            overflow: \"hidden\",\n            overflowY: \"scroll\"\n        };\n\n        if (this.props.templateWrap) {\n            return (\n                <div style={defaultValues}>\n                    <div style={containerStyle}>\n                        <div style={scrollerStyle}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div style={defaultValues}>\n                    {this.props.children}\n                </div>\n            );\n        }\n\n\n    }\n}\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nexport class QuoButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hovered: false\n        };\n    }\n\n    setHover = () => {\n        this.setState({ hovered: true });\n    };\n    removeHover = () => {\n        this.setState({ hovered: false });\n    };\n\n    render() {\n        let buttonStyle;\n        buttonStyle =\n            this.props.auth.user === null ||\n            this.props.auth.user.client.appConfiguration === undefined\n                ? {\n                      ...this.props.style\n                  }\n                : {\n                      ...this.props.auth.user.client.appConfiguration\n                          .buttonStyle,\n                      ...this.props.style\n                  };\n        let { dispatch, ...passedProps } = this.props;\n        return (\n            <Button\n                {...passedProps}\n                onMouseEnter={this.props.disabled ? null : this.setHover}\n                onMouseLeave={this.props.disabled ? null : this.removeHover}\n                style={buttonStyle}\n            >\n                {this.props.children}\n            </Button>\n        );\n    }\n}\n\nconst mapStateToProps = /* istanbul ignore next - redux function*/ state => {\n    return {\n        auth: state.auth\n    };\n};\n\nexport default connect(mapStateToProps)(QuoButton);\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { Form, Message, Divider, Button } from \"semantic-ui-react\";\nimport _ from \"lodash\";\n\n// Import from Config\n// -------------------------------------\nimport { AppConfig } from \"./../../../config/app.config\";\n// Import Components\n// -------------------------------------\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            isFetching: false,\n            errorRaised: false,\n            errorMessages: []\n        };\n    }\n\n    handleChange = (e, { name, value }) => {\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = () => {\n        const { email, password } = this.state;\n        this.setState({ isFetching: true });\n        this.props.actions\n            .login(email, password, this.props.apiUrl)\n            .then(response => {\n                if (this.props.auth.status === \"error\") {\n                    this.setState({\n                        isFetching: false,\n                        errorRaised: true,\n                        errorMessages: response.err.errors\n                    });\n                } else {\n                    this.props.setAuthenticated();\n                }\n            })\n            .catch(error => {\n                this.setState({\n                    isFetching: false,\n                    errorRaised: true,\n                    errorMessages: error.errors\n                });\n            });\n    };\n\n    getErrors = () => {\n        let error = \"\";\n        if (this.props.location.query) {\n            error = this.props.location.query.message;\n        }\n        if (this.state.errorRaised) {\n            error = _.join(this.state.errorMessages, \"\\n\");\n        }\n        return error;\n    };\n\n    render() {\n        const boxStyle = {\n            ...AppConfig.boxStyle,\n            background: AppConfig.colors.master,\n            color: \"#ffffff\",\n            marginTop: \"-40px\"\n        };\n\n        let loginPage = {\n\t\t\temail: {\n\t\t\t\tplaceholder: 'Enter Email',\n\t\t\t\ttext: 'Email',\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\tplaceholder: 'Enter Password',\n\t\t\t\ttext: 'Password',\n\t\t\t},\n\t\t\tlogin: 'Login',\n\t\t\tforgotPassword: 'Forgot Password?',\n\t\t}\n\n        return (\n            <div style={boxStyle}>\n                <h1>Login</h1>\n                <Form\n                    loading={this.state.isFetching ? true : false}\n                    error={\n                        this.state.errorRaised\n                            ? true\n                            : this.props.location.query\n                            ? true\n                            : false\n                    }\n                    onSubmit={this.handleSubmit}\n                >\n                    <Message error content={this.getErrors()} />\n                    <Form.Input\n                        label={AppConfig.authentication.label}\n                        name={AppConfig.authentication.type}\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        onCopy={e => {\n                            e.preventDefault();\n                            return false;\n                        }}\n                        onPaste={e => {\n                            e.preventDefault();\n                            return false;\n                        }}\n                        type=\"text\"\n                        placeholder={AppConfig.authentication.help}\n                    />\n                    <Form.Input\n                        label={loginPage.password.text}\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        onCopy={e => {\n                            e.preventDefault();\n                            return false;\n                        }}\n                        onPaste={e => {\n                            e.preventDefault();\n                            return false;\n                        }}\n                        type=\"password\"\n                        placeholder={loginPage.password.placeholder}\n                    />\n                    <Button primary content=\"Login\" />\n                    {/* <Segment basic style={{ textAlign: \"center\" }}>\n                        <div>Are you new here?</div>\n                        <h3>\n                            <a href=\"/#/register\">Click here to Register </a>\n                        </h3>\n                    </Segment> */}\n                </Form>\n                {!AppConfig.clientApp && (\n                    <div>\n                        <Divider />\n                        <Button\n                            fluid\n                            secondary\n                            as=\"a\"\n                            href=\"/#/\"\n                            content=\"Go back to Home Page\"\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from 'react';\nimport { Form, Message } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { Link } from 'react-router';\n\n// Import from Config\n// -------------------------------------\nimport QuoButton from './../../../globals/semantic/QuoButton.react';\nimport { AppConfig } from './../../../config/app.config';\n\nexport default class ForgotPassword extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = { email: '', isFetching: false, errorRaised: false, errorMessages: [], success: false, successMessages: [] };\n\t}\n\thandleSubmit = () => {\n\t\tconst email = this.state.email;\n\t\tthis.setState({ isFetching: true, errorRaised: false, success: false });\n\t\tthis.props.actions\n\t\t\t.forgotPassword(email)\n\t\t\t.then(response => {\n\t\t\t\tif (this.props.auth.status === 'error') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisFetching: false,\n\t\t\t\t\t\terrorRaised: true,\n\t\t\t\t\t\terrorMessages: response.err.errors,\n\t\t\t\t\t});\n                } else {\n                    this.setState({ isFetching: false, success: true, successMessages: [response.message] });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n                this.setState({ isFetching: false, errorRaised: true, errorMessages: err.errors });\n\t\t\t});\n\t};\n\thandleChange = (e, { name, value }) => {\n\t\tthis.setState({ [name]: value });\n\t};\n\n\tgetErrors = () => {\n\t\tlet error = '';\n\t\tif (this.state.errorRaised) {\n\t\t\terror = _.join(this.state.errorMessages, '\\n');\n\t\t}\n\t\treturn error;\n\t};\n\n    getSuccess = () => {\n        let success = '';\n        if (this.state.success) {\n            success = _.join(this.state.successMessages, '\\n');\n        }\n        return success;\n    };\n\n\trender() {\n\t\t// const style = {\n\t\t//     padding: \"30px\",padding: \"30px\",\n\t\t//     background: \"#fff\",\n\t\t//     width: \"80%\",\n\t\t//     margin: \"10%\"\n\t\t// };\n\t\tlet forgotPasswordPage = {\n\t\t\temail: {\n\t\t\t\tplaceholder: 'Enter Email',\n\t\t\t\ttext: 'Email',\n\t\t\t},\n\t\t\tlogin: 'Login?',\n\t\t\tsend_email: 'Send Mail',\n\t\t}\n\t\treturn (\n\t\t\t<div style={AppConfig.style}>\n\t\t\t\t<Form\n\t\t\t\t\tloading={this.state.isFetching ? true : false}\n\t\t\t\t\terror={this.state.errorRaised}\n\t\t\t\t\tsuccess={this.state.success}\n\t\t\t\t\tonSubmit={this.handleSubmit}>\n\t\t\t\t\t<Message error content={this.getErrors()} />\n\t\t\t\t\t<Message success content={this.getSuccess()} />\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel={forgotPasswordPage.email.text}\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonCopy={(e) => { e.preventDefault(); return false }}\n\t\t\t\t\t\tonPaste={(e) => { e.preventDefault(); return false }}\n\t\t\t\t\t\tplaceholder={forgotPasswordPage.email.placeholder}\n\t\t\t\t\t/>\n\t\t\t\t\t<QuoButton>{forgotPasswordPage.send_email}</QuoButton>\n\t\t\t\t\t<Link to={AppConfig.auth.routes.login}>{forgotPasswordPage.login}</Link>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { hashHistory } from \"react-router\";\nexport default class AuthConfirmation extends React.Component {\n    logout = () => {\n        this.props.actions.logout();\n        this.props.setLoggedOut();\n    };\n    cancel = () => {\n        hashHistory.goBack();\n    };\n    render() {\n        const style = {\n            padding: \"30px\",\n            background: \"#fff\",\n            width: \"80%\",\n            margin: \"10%\",\n            textAlign: \"center\"\n        };\n        return (\n            <div style={style}>\n                Are you sure you want to log out?\n                <br />\n                <br />\n                <Button content=\"Log Out\" onClick={this.logout} />\n                <br />\n                or\n                <br />\n                <a style={{ cursor: \"pointer\" }} onClick={this.cancel}>\n                    Cancel\n                </a>\n            </div>\n        );\n    }\n}\n","// Import from NPM\n// -------------------------------------\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { hashHistory } from \"react-router\";\nimport {\n    Grid,\n    Form,\n    Popup,\n    Message,\n    Input,\n    Button,\n    Icon,\n    Segment\n} from \"semantic-ui-react\";\n\n// Import Actions and Helpers\n// -------------------------------------\nimport { AuthenticationAction } from \"./redux/Authentication.action.react\";\n\n// Import from Config\n// -------------------------------------\nimport { AppConfig } from \"./../../config/app.config\";\nimport { getAppConfig } from \"./../../config/client.config\";\n\n// Import Components\n// -------------------------------------\nimport Login from \"./components/Login.react\";\nimport ForgotPassword from \"./components/ForgotPassword.react\";\nimport AuthConfirmation from \"./components/AuthConfirmation.react\";\n\n// Import Helpers\n// -------------------------------------\nimport FlexBox from \"./../../globals/flexbox/FlexBox.react\";\n\nclass AuthenticationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authenticated: this.props.auth.isUserLoggedIn\n        };\n    }\n\n    setLoggedOut = () => {\n        this.setState({ authenticated: false });\n    };\n\n    setAuthenticated = () => {\n        this.props.actions.session().then(() => {\n            if (this.props.location.pathname === \"creator\") {\n                this.setState({ authenticated: true });\n            } else {\n                const authRoot =\n                    this.props.simParams.lastLocation === \"#\"\n                        ? AppConfig.auth.routes.authenticatedRoot\n                        : this.props.simParams.lastLocation;\n                hashHistory.push({\n                    pathname: authRoot,\n                    query: this.props.location.query\n                });\n            }\n        });\n    };\n\n    updateName = e => this.setState({ name: e.target.value });\n    updateEmail = e => this.setState({ email: e.target.value });\n    updatePassword = e =>\n        this.setState({ password: e.target.value, confirm: e.target.value });\n    togglePasswordVisibility = e =>\n        this.setState({ showPassword: !this.state.showPassword });\n\n    validateEmail = email => {\n        // eslint-disable-next-line\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    };\n\n    handleSubmit = () => {\n        this.setState({ submitted: true }, () =>\n            this.props.actions\n                .register(\n                    this.state.name,\n                    this.state.email,\n                    this.state.password,\n                    this.state.confirm\n                )\n                .then(response => {\n                    if (response.status === \"error\") {\n                        this.setState({\n                            submitted: false,\n                            errorRaised: true,\n                            errorMessages: response.err.errors.full_messages\n                        });\n                    } else {\n                        hashHistory.push(\"/\");\n                    }\n                })\n                .catch(error => {\n                    this.setState({\n                        submitted: false,\n                        errorRaised: true,\n                        errorMessages:\n                            error.err.response.err.errors.full_messages\n                    });\n                })\n        );\n    };\n\n    render() {\n        let backStyle = {\n            position: \"fixed\",\n            right: \"0\",\n            bottom: \"0\",\n            minWidth: \"100%\",\n            minHeight: \"100%\"\n        };\n        let overlayStyle = {\n            ...backStyle,\n            background: \"rgba(255,255,255,0.5)\"\n        };\n        let coLogoStyle = {\n            width: \"90%\",\n            margin: \"0 5%\",\n            display: \"block\"\n        };\n\n        let component = {};\n        if (this.state.authenticated) {\n            component = (\n                <AuthConfirmation\n                    {...this.props}\n                    setLoggedOut={this.setLoggedOut}\n                />\n            );\n        } else {\n            const boxStyle = {\n                ...AppConfig.boxStyle,\n                background: AppConfig.colors.master,\n                color: \"#ffffff\",\n                marginTop: \"-32px\"\n            };\n            switch (this.props.location.pathname) {\n                case AppConfig.auth.routes.forgotPassword:\n                    component = <ForgotPassword {...this.props} />;\n                    break;\n                case AppConfig.auth.routes.logout:\n                    component = (\n                        <Login\n                            {...this.props}\n                            setAuthenticated={this.setAuthenticated}\n                            apiUrl={this.props.apiUrl}\n                        />\n                    );\n                    break;\n                case \"/register\":\n                    component = (\n                        <div style={boxStyle}>\n                            <Form\n                                loading={this.state.submitted ? true : false}\n                                error={\n                                    this.state.errorRaised\n                                        ? true\n                                        : this.props.location.query\n                                        ? true\n                                        : false\n                                }\n                                onSubmit={this.handleSubmit}\n                            >\n                                <Message\n                                    hidden={!this.state.errorRaised}\n                                    visible={this.state.errorRaised}\n                                    error\n                                    header=\"There were some errors with your submission\"\n                                    list={this.state.errorMessages}\n                                />\n                                <h1>Register</h1>\n                                <Form.Field>\n                                    <label>Email Id</label>\n                                    <Popup\n                                        trigger={\n                                            <Input\n                                                fluid\n                                                placeholder=\"Enter your email id\"\n                                                onChange={this.updateEmail}\n                                            />\n                                        }\n                                        header=\"Email Id\"\n                                        content={\n                                            getAppConfig().registration\n                                                .restricted\n                                                ? \"You can only register with \" +\n                                                  getAppConfig().registration.allowedDomains.join(\n                                                      \", \"\n                                                  ) +\n                                                  \" domains\"\n                                                : \"Please enter a valid email id\"\n                                        }\n                                        on=\"focus\"\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Password</label>\n                                    <Input\n                                        fluid\n                                        type={\n                                            this.state.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        icon={\n                                            <Icon\n                                                name={\n                                                    this.state.showPassword\n                                                        ? \"eye\"\n                                                        : \"eye slash outline\"\n                                                }\n                                                link\n                                                onClick={\n                                                    this\n                                                        .togglePasswordVisibility\n                                                }\n                                            />\n                                        }\n                                        placeholder=\"Enter a password\"\n                                        onChange={this.updatePassword}\n                                    />\n                                </Form.Field>\n                                <Button\n                                    fluid\n                                    secondary\n                                    disabled={\n                                        this.state.email === \"\" ||\n                                        this.state.password === \"\"\n                                    }\n                                >\n                                    Register\n                                </Button>\n                                <Segment basic style={{ textAlign: \"center\" }}>\n                                    <div>Already registered?</div>\n                                    <a href=\"/#/login\">Login </a>\n                                </Segment>\n                            </Form>\n                        </div>\n                    );\n                    break;\n                default:\n                    component = (\n                        <Login\n                            {...this.props}\n                            setAuthenticated={this.setAuthenticated}\n                            apiUrl={this.props.apiUrl}\n                        />\n                    );\n                    break;\n            }\n        }\n\n        return (\n            <div style={{ height: \"100vh\", position: \"relative\" }}>\n                <video autoPlay muted loop style={backStyle}>\n                    <source\n                        src=\"assets/images/configurable/simbg.mp4\"\n                        type=\"video/mp4\"\n                    />\n                </video>\n                <div style={overlayStyle} />\n                <FlexBox>\n                    <div>\n                        <img\n                            src={\"assets/images/configurable/cologo.png\"}\n                            alt=\"logo\"\n                            style={coLogoStyle}\n                        />\n                        <br/>\n                        <br/>\n                        <Grid padded divided>\n                            <Grid.Row>\n                                <Grid.Column width={16}>{component}</Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </div>\n                </FlexBox>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        simParams: state.simParams\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        actions: {\n            register: (name, email, password, confirm) => {\n                return dispatch(\n                    AuthenticationAction.register(\n                        name,\n                        email,\n                        password,\n                        confirm\n                    )\n                );\n            },\n            login: (email, password, domain) => {\n                return dispatch(\n                    AuthenticationAction.login(email, password, domain)\n                );\n            },\n            logout: () => {\n                return dispatch(AuthenticationAction.logout());\n            },\n            session: () => {\n                return dispatch(AuthenticationAction.session());\n            },\n            omniAuth: userDetail => {\n                return dispatch(AuthenticationAction.omniAuthLogin(userDetail));\n            },\n            forgotPassword: email => {\n                return dispatch(AuthenticationAction.forgotPassword(email));\n            }\n        }\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AuthenticationContainer);\n"],"sourceRoot":""}